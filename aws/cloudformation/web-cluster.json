{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",
  "Parameters": {
    "CertificateArn": {
      "Type": "String",
      "Description": "The certificate to use on ApiGateway (first [8f1b6ff9...] is live)",
      "AllowedValues": [
        "arn:aws:acm:us-east-1:812374064424:certificate/8f1b6ff9-f215-4c9c-8a14-04a2aab84004",
        "arn:aws:acm:us-east-1:812374064424:certificate/952d48cc-77bc-4736-b398-c5451e7dc970"
      ]
    },
    "HSDomainName": {
      "Type": "String",
      "Description": "The domain name under which this deployment should be deployed",
      "Default": "live.honesty.store"
    },
    "ServiceSecret": {
      "Type": "String",
      "Description": "Secret for inter-service authentication"
    },
    "UserSecret": {
      "Type": "String",
      "Description": "Secret for user authentication"
    },
    "HSPrefix": {
      "Type": "String",
      "Description": "Prefix for all shared names, e.g. \"honesty-store\", \"hs\""
    },
    "ServicePrefix": {
      "Type": "String",
      "Description": "Prefix for all service-based names, e.g. \"honesty-store\", \"hs-<branch>\""
    },
    "StripeKeyLive": {
      "Type": "String",
      "Description": "Stripe secret - live"
    },
    "StripeKeyTest": {
      "Type": "String",
      "Description": "Stripe secret - test"
    }

  },
  "Resources": {
    "RestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": { "Ref": "ServicePrefix" },
        "BinaryMediaTypes": [
          "application/font-woff",
          "application/font-woff2",
          "application/javascript",
          "application/json",
          "application/octet-stream",
          "application/xml",
          "font/eot",
          "font/opentype",
          "font/otf",
          "image/jpeg",
          "image/png",
          "image/svg+xml",
          "image/x-icon",
          "text/comma-separated-values",
          "text/css",
          "text/html",
          "text/javascript",
          "text/plain",
          "text/text",
          "text/xml",
          "*/*"
        ]
      }
    },


  "itemStack": {
    "Type": "AWS::CloudFormation::Stack",
    "DependsOn": [
      "RestApi"
    ],
    "Properties": {
      "TemplateURL": {
        "Fn::Join": [
          "",
          [
            "https://s3.amazonaws.com/honesty-store-templates-",
            {
              "Ref": "AWS::Region"
            },
            "/per-service.json"
          ]
        ]
      },
      "TimeoutInMinutes": "10",
      "Parameters": {
        "ServiceName": "item",
        "ServiceSecret": {
          "Ref": "ServiceSecret"
        },
        "IndexUserId": "No",
        "ReadCapacityUnits": "2",
        "WriteCapacityUnits": "1",
        "LambdaS3Key": "item.zip",
        "LambdaTimeout": "10",
        "LambdaHandler": "lib/bundle-min.handler",
        "WithTable": "Yes",
        "UserSecret": "",
        "StripeKeyLive": "",
        "StripeKeyTest": "",
        "WithApiGateway": "No",
        "ApiGatewayCatchAll": "No",
        "HSPrefix": {
          "Ref": "HSPrefix"
        },
        "ServicePrefix": {
          "Ref": "ServicePrefix"
        },
        "RestApi": {
          "Ref": "RestApi"
        },
        "RestApiRootResourceId": {
          "Fn::GetAtt": [
            "RestApi",
            "RootResourceId"
          ]
        }
      }
    }
  },
  "storeStack": {
    "Type": "AWS::CloudFormation::Stack",
    "DependsOn": [
      "RestApi"
    ],
    "Properties": {
      "TemplateURL": {
        "Fn::Join": [
          "",
          [
            "https://s3.amazonaws.com/honesty-store-templates-",
            {
              "Ref": "AWS::Region"
            },
            "/per-service.json"
          ]
        ]
      },
      "TimeoutInMinutes": "10",
      "Parameters": {
        "ServiceName": "store",
        "ServiceSecret": {
          "Ref": "ServiceSecret"
        },
        "IndexUserId": "No",
        "ReadCapacityUnits": "3",
        "WriteCapacityUnits": "3",
        "LambdaS3Key": "store.zip",
        "LambdaTimeout": "10",
        "LambdaHandler": "lib/bundle-min.handler",
        "WithTable": "Yes",
        "UserSecret": "",
        "StripeKeyLive": "",
        "StripeKeyTest": "",
        "WithApiGateway": "No",
        "ApiGatewayCatchAll": "No",
        "HSPrefix": {
          "Ref": "HSPrefix"
        },
        "ServicePrefix": {
          "Ref": "ServicePrefix"
        },
        "RestApi": {
          "Ref": "RestApi"
        },
        "RestApiRootResourceId": {
          "Fn::GetAtt": [
            "RestApi",
            "RootResourceId"
          ]
        }
      }
    }
  },
  "topupStack": {
    "Type": "AWS::CloudFormation::Stack",
    "DependsOn": [
      "RestApi"
    ],
    "Properties": {
      "TemplateURL": {
        "Fn::Join": [
          "",
          [
            "https://s3.amazonaws.com/honesty-store-templates-",
            {
              "Ref": "AWS::Region"
            },
            "/per-service.json"
          ]
        ]
      },
      "TimeoutInMinutes": "10",
      "Parameters": {
        "ServiceName": "topup",
        "ServiceSecret": {
          "Ref": "ServiceSecret"
        },
        "IndexUserId": "Yes",
        "ReadCapacityUnits": "1",
        "WriteCapacityUnits": "1",
        "LambdaS3Key": "topup.zip",
        "LambdaTimeout": "10",
        "LambdaHandler": "lib/bundle-min.handler",
        "WithTable": "Yes",
        "UserSecret": "",
        "StripeKeyLive": {
          "Ref": "StripeKeyLive"
        },
        "StripeKeyTest": {
          "Ref": "StripeKeyTest"
        },
        "WithApiGateway": "No",
        "ApiGatewayCatchAll": "No",
        "HSPrefix": {
          "Ref": "HSPrefix"
        },
        "ServicePrefix": {
          "Ref": "ServicePrefix"
        },
        "RestApi": {
          "Ref": "RestApi"
        },
        "RestApiRootResourceId": {
          "Fn::GetAtt": [
            "RestApi",
            "RootResourceId"
          ]
        }
      }
    }
  },
  "transactionStack": {
    "Type": "AWS::CloudFormation::Stack",
    "DependsOn": [
      "RestApi"
    ],
    "Properties": {
      "TemplateURL": {
        "Fn::Join": [
          "",
          [
            "https://s3.amazonaws.com/honesty-store-templates-",
            {
              "Ref": "AWS::Region"
            },
            "/per-service.json"
          ]
        ]
      },
      "TimeoutInMinutes": "10",
      "Parameters": {
        "ServiceName": "transaction",
        "ServiceSecret": {
          "Ref": "ServiceSecret"
        },
        "IndexUserId": "No",
        "ReadCapacityUnits": "2",
        "WriteCapacityUnits": "2",
        "LambdaS3Key": "transaction.zip",
        "LambdaTimeout": "10",
        "LambdaHandler": "lib/bundle-min.handler",
        "WithTable": "Yes",
        "UserSecret": "",
        "StripeKeyLive": "",
        "StripeKeyTest": "",
        "WithApiGateway": "No",
        "ApiGatewayCatchAll": "No",
        "HSPrefix": {
          "Ref": "HSPrefix"
        },
        "ServicePrefix": {
          "Ref": "ServicePrefix"
        },
        "RestApi": {
          "Ref": "RestApi"
        },
        "RestApiRootResourceId": {
          "Fn::GetAtt": [
            "RestApi",
            "RootResourceId"
          ]
        }
      }
    }
  },
  "transactionslackStack": {
    "Type": "AWS::CloudFormation::Stack",
    "DependsOn": [
      "RestApi"
    ],
    "Properties": {
      "TemplateURL": {
        "Fn::Join": [
          "",
          [
            "https://s3.amazonaws.com/honesty-store-templates-",
            {
              "Ref": "AWS::Region"
            },
            "/per-service.json"
          ]
        ]
      },
      "TimeoutInMinutes": "10",
      "Parameters": {
        "ServiceName": "transaction-slack",
        "ServiceSecret": {
          "Ref": "ServiceSecret"
        },
        "IndexUserId": "No",
        "ReadCapacityUnits": "1",
        "WriteCapacityUnits": "1",
        "LambdaS3Key": "transaction-slack.zip",
        "LambdaTimeout": "10",
        "LambdaHandler": "lib/bundle-min.handler",
        "WithTable": "Yes",
        "UserSecret": "",
        "StripeKeyLive": "",
        "StripeKeyTest": "",
        "WithApiGateway": "No",
        "ApiGatewayCatchAll": "No",
        "HSPrefix": {
          "Ref": "HSPrefix"
        },
        "ServicePrefix": {
          "Ref": "ServicePrefix"
        },
        "RestApi": {
          "Ref": "RestApi"
        },
        "RestApiRootResourceId": {
          "Fn::GetAtt": [
            "RestApi",
            "RootResourceId"
          ]
        }
      }
    }
  },
  "userStack": {
    "Type": "AWS::CloudFormation::Stack",
    "DependsOn": [
      "RestApi"
    ],
    "Properties": {
      "TemplateURL": {
        "Fn::Join": [
          "",
          [
            "https://s3.amazonaws.com/honesty-store-templates-",
            {
              "Ref": "AWS::Region"
            },
            "/per-service.json"
          ]
        ]
      },
      "TimeoutInMinutes": "10",
      "Parameters": {
        "ServiceName": "user",
        "ServiceSecret": {
          "Ref": "ServiceSecret"
        },
        "IndexUserId": "No",
        "ReadCapacityUnits": "1",
        "WriteCapacityUnits": "1",
        "LambdaS3Key": "user.zip",
        "LambdaTimeout": "10",
        "LambdaHandler": "lib/bundle-min.handler",
        "WithTable": "Yes",
        "UserSecret": {
          "Ref": "UserSecret"
        },
        "StripeKeyLive": "",
        "StripeKeyTest": "",
        "WithApiGateway": "No",
        "ApiGatewayCatchAll": "No",
        "HSPrefix": {
          "Ref": "HSPrefix"
        },
        "ServicePrefix": {
          "Ref": "ServicePrefix"
        },
        "RestApi": {
          "Ref": "RestApi"
        },
        "RestApiRootResourceId": {
          "Fn::GetAtt": [
            "RestApi",
            "RootResourceId"
          ]
        }
      }
    }
  },
  "webStack": {
    "Type": "AWS::CloudFormation::Stack",
    "DependsOn": [
      "RestApi"
    ],
    "Properties": {
      "TemplateURL": {
        "Fn::Join": [
          "",
          [
            "https://s3.amazonaws.com/honesty-store-templates-",
            {
              "Ref": "AWS::Region"
            },
            "/per-service.json"
          ]
        ]
      },
      "TimeoutInMinutes": "10",
      "Parameters": {
        "ServiceName": "web",
        "ServiceSecret": {
          "Ref": "ServiceSecret"
        },
        "IndexUserId": "No",
        "ReadCapacityUnits": "0",
        "WriteCapacityUnits": "0",
        "LambdaS3Key": "web.zip",
        "LambdaTimeout": "10",
        "LambdaHandler": "server/lambda.handler",
        "WithTable": "No",
        "UserSecret": "",
        "StripeKeyLive": "",
        "StripeKeyTest": "",
        "WithApiGateway": "Yes",
        "ApiGatewayCatchAll": "Yes",
        "HSPrefix": {
          "Ref": "HSPrefix"
        },
        "ServicePrefix": {
          "Ref": "ServicePrefix"
        },
        "RestApi": {
          "Ref": "RestApi"
        },
        "RestApiRootResourceId": {
          "Fn::GetAtt": [
            "RestApi",
            "RootResourceId"
          ]
        }
      }
    }
  },
  "apiStack": {
    "Type": "AWS::CloudFormation::Stack",
    "DependsOn": [
      "RestApi"
    ],
    "Properties": {
      "TemplateURL": {
        "Fn::Join": [
          "",
          [
            "https://s3.amazonaws.com/honesty-store-templates-",
            {
              "Ref": "AWS::Region"
            },
            "/per-service.json"
          ]
        ]
      },
      "TimeoutInMinutes": "10",
      "Parameters": {
        "ServiceName": "api",
        "ServiceSecret": {
          "Ref": "ServiceSecret"
        },
        "IndexUserId": "No",
        "ReadCapacityUnits": "0",
        "WriteCapacityUnits": "0",
        "LambdaS3Key": "api.zip",
        "LambdaTimeout": "30",
        "LambdaHandler": "lib/bundle-min.handler",
        "WithTable": "No",
        "UserSecret": "",
        "StripeKeyLive": "",
        "StripeKeyTest": "",
        "WithApiGateway": "Yes",
        "ApiGatewayCatchAll": "No",
        "HSPrefix": {
          "Ref": "HSPrefix"
        },
        "ServicePrefix": {
          "Ref": "ServicePrefix"
        },
        "RestApi": {
          "Ref": "RestApi"
        },
        "RestApiRootResourceId": {
          "Fn::GetAtt": [
            "RestApi",
            "RootResourceId"
          ]
        }
      }
    }
  },

    "Deployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": { "Ref": "RestApi" },
        "StageName": "live"
      },
      "DependsOn": [
        "itemStack",
        "storeStack",
        "topupStack",
        "transactionStack",
        "transactionslackStack",
        "userStack",
        "webStack",
        "apiStack"
      ]
    },
    "Stage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": { "Ref": "RestApi" },
        "DeploymentId": { "Ref": "Deployment" },
        "StageName": "live"
      }
    },
    "DomainName": {
      "Type": "AWS::ApiGateway::DomainName",
      "Properties": {
        "CertificateArn": { "Ref": "CertificateArn" },
        "DomainName": { "Ref": "HSDomainName" }
      }
    },
    "BasePathMapping": {
      "Type": "AWS::ApiGateway::BasePathMapping",
      "Properties": {
        "BasePath": "",
        "RestApiId": { "Ref": "RestApi" },
        "Stage": { "Ref": "Stage" },
        "DomainName": { "Ref": "HSDomainName" }
      }
    },

    "RecordSet": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Type": "CNAME",
        "Name": { "Ref": "HSDomainName" },
        "TTL": 300,
        "HostedZoneId": "Z1H4BLMHZ9P4II",
        "Region": { "Ref": "AWS::Region" },
        "ResourceRecords": [{
          "Value": { "Fn::GetAtt": [ "DomainName", "DistributionDomainName" ] }
        }]
      }
    }
  },
  "Outputs": {
  }
}
